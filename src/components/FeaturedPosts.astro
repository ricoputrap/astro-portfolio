---
import type { Post } from '../types/index.types';
import Card from './Card.astro';
import PostItem from './PostItem.astro';
import Tags from './Tags.astro';

interface Props {
  mainPost: Post;
  posts: Post[];
}

const { mainPost, posts } = Astro.props;
const HOST = import.meta.env.HOST;

const MAIN_POST_URL = `${HOST}/posts/${mainPost.slug}`;
const SECOND_POST_URL = `${HOST}/posts/${posts[0].slug}`;
const THIRD_POST_URL = `${HOST}/posts/${posts[1].slug}`;
---

<div class="featured-posts">
  <div class="main">
    <Card>
      <div class="container">
        <img src={ mainPost.cover } alt={ mainPost.title } />

        <div class="content">
          <a href={ MAIN_POST_URL }>
            <h5 class="title">{ mainPost.title }</h5>
          </a>
          <p class="date">{ mainPost.date } by <strong>{ mainPost.author }</strong></p>
          <p class="description">{ mainPost.description }</p>
          <Tags tags={ mainPost.tags } />
        </div>
      </div>
    </Card>
  </div>

  <div class="posts">
    <PostItem
      title={ posts[0].title }
      date={ posts[0].date }
      author={ posts[0].author }
      description={ posts[0].description }
      tags={ posts[0].tags }
      slug={ SECOND_POST_URL }
    />
    <PostItem
      title={ posts[1].title }
      date={ posts[1].date }
      author={ posts[1].author }
      description={ posts[1].description }
      tags={ posts[1].tags }
      slug={ THIRD_POST_URL }
    />
  </div>
</div>

<style>
  p {
    margin: 0;
  }

  .featured-posts {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 20px;
  }

  .main {
    grid-column: 1 / span 2;
    grid-row: 1 / span 2;
  }
  .main .container {
    display: flex;
    flex-direction: column;
    row-gap: 20px;
    padding: 20px;
    padding-bottom: unset;
  }

  .posts {
    display: flex;
    flex-direction: column;
    row-gap: 20px;

    grid-column-start: 3;
    grid-row: 1 / span 2;
  }
  .main img {
    width: 100%;
    height: 240px;
    object-fit: cover;
    border-radius: 10px;
  }

  .title {
    color: var(--color-text-brand);
  }
  .date {
    font-size: 14px;
    font-style: italic;
    color: var(--color-text-secondary);
    line-height: 20px;
  }
  .description {
    font-size: 14px;
    line-height: 24px;
  }
  .content {
    display: flex;
    flex-direction: column;
    row-gap: 8px;
  }

  @media screen and (max-width: 1024px) {
    .featured-posts {
      grid-template-columns: repeat(5, 1fr);
      grid-template-rows: repeat(1, 1fr);
    }
    .main {
      grid-column: 1 / span 3;
      grid-row: 1;
    }
    .posts {
      grid-column: 4 / span 2;
      grid-row: 1;
    }
  }

  @media screen and (max-width: 845px) {
    .featured-posts {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
    }
    .main {
      grid-column: 1;
      grid-row: 1;
      max-width: 384px;
      height: fit-content;
    }
    .main .container {
      padding: 20px;
    }
    .posts {
      grid-column: 1;
      grid-row: 2;
      max-width: 500px;
    }
  }
</style>